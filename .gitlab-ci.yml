stages:
  - base
  - prepare
  - lint
  - build
  - test
  - build-release
  - deploy-release

cache: &global_cache_configuration
  paths:
    - build/
  policy: pull-push

.docker-job:
  tags: [docker_runner]
  before_script:
    - apk add --no-cache curl unzip python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install awscli
    - rm -rf /var/cache/apk/*

.merge-request-job:
  tags: [docker_runner]
  image: ${container_registry}/energi3_builder
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

build-builder:
  stage: base
  cache: []
  dependencies: []
  extends: .docker-job
  script:
    - docker build -t energi3_builder:${CI_COMMIT_REF_NAME} -f Dockerfile.builder --build-arg repository_remote=${repository_remote} .
    - docker tag energi3_builder:${CI_COMMIT_REF_NAME} ${container_registry}/energi3_builder:${CI_COMMIT_REF_NAME}
    - docker push ${container_registry}/energi3_builder:${CI_COMMIT_REF_NAME}
    - docker tag energi3_builder:${CI_COMMIT_REF_NAME} ${container_registry}/energi3_builder:latest
    - docker push ${container_registry}/energi3_builder:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - Dockerfile.builder
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == "develop"'

clean-repo:
  stage: prepare
  cache: []
  dependencies: []
  extends: .merge-request-job
  script:
    - git checkout -- .
    - git clean -fdx .

lint-go:
  stage: lint
  extends: .merge-request-job
  script:
    - make lint

format-go:
  stage: lint
  extends: .merge-request-job
  script:
    - if [[ "$(gofmt -s -e -d .)" != "" ]]; then echo "[Error] gofmt found unformatted files"; exit 1; fi

build-linux:
  stage: build
  cache:
    # inherit all global cache settings
    <<: *global_cache_configuration
  dependencies: ["lint-go", "format-go"]
  extends: .merge-request-job
  script:
    - git checkout -- .
    - git clean -fdx .
    - make all
    - if [[ -z "$(git status --porcelain)" ]]; then echo "Working directory clean"; else echo -e "[Error] compile job left modified files in working directory:\n$(git status --porcelain)"; exit 1; fi

test-go-report:
  stage: test
  dependencies: []
  needs: ["build-linux"]
  cache:
    # inherit all global cache settings
    <<: *global_cache_configuration
    # override the policy
    policy: pull
  extends: .merge-request-job
  script:
    - make test-go-cover && tail -n1 .test-go-cover.func
  artifacts:
    when: always
    paths:
      - .test-go-report.xml
      - .test-go-cover.func
      - .test-go-cover.html
    reports:
      junit: .test-go-report.xml
    expire_in: 2 day
  coverage: "/\\(statements\\)\\s+\\d+.?\\d+%/"

build-release:
  stage: build-release
  cache: []
  extends: .merge-request-job
  dependencies: ["test-go-report"]
  needs: 
    - test-go-report
  tags: [docker_runner]
  image: ${container_registry}/energi3_builder:latest
  script:
    - make -f Makefile.release release
    - make -f Makefile.release release-upload
  artifacts:
    when: always
    paths:
      - ./build/release/*/*.tgz
    expire_in: 1 day